#+TITLE: Emacs komande

* Sadržal :TOC:
- [[#reference][Reference]]
- [[#sažetak][Sažetak]]
- [[#korisničko-sučelje][Korisničko sučelje]]
  - [[#navigacija-dokumentima][Navigacija dokumentima]]
  - [[#baratanje-prozorima-i-panelima][Baratanje prozorima i panelima]]
- [[#baratanje-tekstom][Baratanje tekstom]]
  - [[#osnovna-sintaksa][Osnovna sintaksa]]
  - [[#kretnje][Kretnje]]
  - [[#uređivanje-teksta][Uređivanje teksta]]
  - [[#tablice][Tablice]]
- [[#org-mode][Org Mode]]
  - [[#org-babel][Org Babel]]
- [[#izgled][Izgled]]
- [[#terminali][Terminali]]
- [[#magit][Magit]]
  - [[#fetch-i-pull][Fetch i Pull]]
  - [[#log][Log]]
  - [[#commit][Commit]]
- [[#suradnja-s-vimom][Suradnja s Vimom]]

* Reference
Najprvo treba pregledati github [[https://github.com/doomemacs/doomemacs/blob/master/docs/index.org][dokumentaciju]] i [[https://discourse.doomemacs.org/c/guides/5][službenu dokumentaciju]] za Doom Emcas.
Može se pogledati i [[https://www.emacswiki.org][dokumentaciju]] za Emacs.

Nakon toga se pažnja može posvetiti tutorialima. Većinu sam ih pronašao preko Doomove dokumentacije.
    + DistroTube
    + Zaiste Programming

NOTE =<M-x>describe-key= (=<C-h>k=) i =<M-x>describe-bindings=

* Sažetak
==Emacs== dijeli posao baratanja sa dokumentima i prozorima kroz nekoliko boljki:
     + ~buffer~ - /ono štoje tvoreno/; blo kakav prokrenuti program, bilo da je za čitanje datoteka (/text editor/), bilo da je za bilo što drugo (dired, magit...)
       + obično jedan buffer zauzme jedan prozor
     + ~window~ - okvir u kojem se može vrtiti buffer (obično zvan /pane/).
       + može ih biti više u jednom ekranu (/split/) ili može uzimati cijeli ekran
     + ~workspace~ - je set otvorenih buffera i prozora. Može ih se otvarati koliko se želi i/ili skakati među otvorenima s =<Leader><Tab>=
     + ~project~ - /projekti/ su direktoriji koji sadrže neke uobičajene projektne datoteke ili direktorije (~.git~, ~.hg~...) i otkriveni su po automatizmu te su dostupni kroz =<Leader>pp=, a ako se želi neki dodatan direktorij učiniti "projektom", može se unutar njega smjestiti dadoteka ~.projectile~
     + ~bookmark~ - omogućava brzo skakanje do dokumenta. Glavni prečac je =<Leader><Return>=.
     + ~session~ - koliko znam ne može se ručno spremiti, ali se može povratiti prethodni s =<Leader>ql=

* Korisničko sučelje
** Navigacija dokumentima
  + =<Leader><Leader>= otvara /dired/ iliti Explorer krećući od ~root~ direktorija projekta
  + =<Leader>.= otvara /dired/ iliti Explorer
  + =<Leader>fP= otvara popis konfiguracijskih datoteka
  + =<Leader>fr= otvara popis nedavno otvorenih datoteka

*** Dired i Treemacs
Emacs u startu nudi nekoliko file explorera

**** Osnovni file explorer (bezimen (?), ugrađen)
+ u načelu funkcionira kao ~fzf~
+ otvara ga =<Leader>.=

**** Dired (Directory Editor, ugrađen)
+ omogućuje jednostavnu navigaciju Vim komandamazkretnje (=j=, =k=, =h=, =l=)
+ =(= pali/gasi ispis (meta) detalja u popisu datoteka
+ =<Return>= je za ulazak u dirktorije (otvaranje datoteka), a =-= je za izlazak iz direktorija
+ =+= je za stvaranje dirktorija, a =<Leader>.= omogućava stvaranje i otvaranje nove datoteke
+ =m= je za selekciju stavke
+ =d= je za selekciju stavke za brisnje
+ =x= je za ksekuciju selekcije (bilo otvaranje, bilo brisanje)
+ postoji i poseban ~peep-dired~ plugin za pretpregled (/preview/) multimedialnih datoteka. (ref. Church of Emacs, v. 8, 12:30)

**** Treemacs
+ osnovni prečac za otvaranje zatvaranje je =<Leader>op=
** Baratanje prozorima i panelima
  + =<Leader>b{}= je za /buffere/ (prozore, tabove...)
    + =b= je za dobiti popis otvorenih dokumenata (=B= je za vidjeti i neke sistemske buffere, =<Leader>= za vidjeti i skrivene)
      + =<Leader>,= je kratica za =<Leader>bb=
    + =n= je za otvaranje novog buffera
    + =<= i =>= su za otvaranje idućeg/prethodnog
    + =k= je za gašenje aktivnog buffera
  + =<Leader>w{}= je za panele (/panes/) - uglavnom su svi u Doom-u preslika Vimovih (=<C-w>{}= komandi)
    + =s= i =v= su za otvaranje novih panela
    + =w= je za selektiranje idućeg panela
    + =c= ili =q= je za zatvaranje panela
  + ~Cancel/quit~: =<C-g>= ili ponekad =ESC=
  + =<Leader>qr= je za ~restart~-anje Emacsa, ali meni ne radi jer pokrećem Emacs kroz =doom run=

* Baratanje tekstom
** Osnovna sintaksa
Uobičajena sintaksa je slična, ali ipak drukčija od markdowna

#+START_SRC conf
      * Naslov prvog stupnja
      ** Naslov drugog stupnja
      *** Naslov trećleg stupnja
      *masno*
      /kurziv/
      _potcrtano_
      +precrtano+
      =code=
      ~verbatim~
      [[https://webstranica][Poveznica]]
      + stavka
      + stavka s brojačem podstavki [0/2] [0%]
        - [ ] stavka s kućicom
        - [ ] =<Return>= bi trebao biti za vrtnju stanja
      + stavka
      + stavka
      + TODO stavka za obaviti se gasi/pali s =<S-Left>= i =<S-Right>=
      + TODO stavka za obaviti se preuređuje s =<Leader>mt=
#+END_SRC

** Kretnje
Evil-mode često uspijeva dobro izbalansirati ubacivanje komandi koje se ponašaju kao u Vimu s upotrijebom Vim prečaca za već postojeće Emacs komande, ali tamo gdje se razilaze, Emacsove nekako bolje i pametnije rade (npr. bolje lociraju stvarne semantičke cjeline za skakanje po tekstu)
+ =<C-b>=, =<C-f>=, =<C-p>= i =<C-n>= ili =h=, =l=, =k= i =j= su za ~backward~, ~forward~, ~previous~ i ~next~
+ =<M-b>= i =<M-f>= tj. =w=, =e=, =b= i =W=, =E=, =B= za kretanje po riječima
+ =<C-a>= i =<C-e>= (pogotovo praktični u insert modu) tj. =0= i =$= su za skakanje na početak i kraj retka
+ =<M-a>= i =<M-e>= tj. =)= i =(= su za skakanje naprijed/nazad po rečenicama (traži interpunkcijske znakove)
+ =}= i ={= su za skakanje naprijed/nazad po odlomcima
+ =<C-<>= i =<C->>= tj. =gg= i =G= za skakanje na počtak ili kraj dokumenta
+ =<C-l>=, =zz= su za skrolnje prozora srdina-vrh-dno (još mi fali za Vim)
  - =<C-M-l>= pokušava optimizirati položaj ekrana za gledanje aktivnog bloka
+ =<C-s>= i =<C-r>= (? je u evilu za /undo/) tj. =/=, =f= i =t= pokreću pretragu za pojmom/znakom, a ponavljanje =<C-s/r>= dok j search buffer otvoren tj. =n= i =N= te =;= i =,= u nomalnom modu skaču do idućeg/prethodnog pretraživanog pojma/znaka
+ =<C-o>= i =<C-i>= skaču nazad/naprijed na nedavo uređivana mjesta (čak i između datoteka)
+ Pored uobičajenih Vim kretnji, Org Mode omogućava još nekoliko specifično korisnih:
  + =<Tab>= je komanda za otvaranje i zatvaranje naslovnih cjelina
    + =<S-Tab>= je za otvaranje/zatvaranje svih odjednom
  + =<M-n>= i =<M-p>= ili (donekle) =<M-}>= i =<M-{>= tj. =gj= i =gk= su za skakanje od naslova do naslova istog stupnja
    - =^= je za skakanje na najbliži naslov "roditeljske" sekcije
  + =<M-g><M-g><broj>= skače na određeni redak , a =<M-g><Tab><broj>= na određenu kolumnu

** Uređivanje teksta
Postoje neki defaultni prečci, ali doom emacs donosi svoje
+ Prikaži datoteku: ~switch-buffer~, =:-x b= ili =<SPC>b b=, =<SPC>,=
+ Otvori datoteku: ~find-file~, =<C-x><C-d> ili =<SPC> f f=, =<SPC> .= ili =<SPC> <SPC>=
+ Prikaži prozor: ~ibuffer~, =<C-x><C-b> ili =<SPC>b B=, =<SPC>b i=
+ Prikaži prethodni prozor: ~previous-buffer~ ili ~next-buffer~, =<C-x><left>= ili =<C-x><right>=, =<SPC>b [= ili =<SPC>b ]=
+ Spremi datoteku: ~save-buffer~, =<C-x><C-s> ili =<SPC>f s=, =:w<CR>=
+ Spremi datoteku kao: ~write-file~, =<C-x><C-w> ili =<SPC>f S=, =:w <ime><CR>=
+ =<C-Return>= daje novi redak istog stupnja u kojem se nalazimo
  - to može biti nova stavka u popisu ili novi naslov istog stupnja nakon cjeline
+ =J= spaja idući redak i stavlja razmak za riječ
+ =<M-h>= i =<M-l>= ili =M-<left>= i =M-<right>= su za mijenjanje stupnja naslova
+ =<M-k>= i =<M-j>= ili =M-<up>= i =M-<down>= su za zamjene položaja cijelih naslovljenih blokova
+ komanda =<M-t>= premeće riječi lijevo-desno, ovisno o tome gdje je smješten kursor. Ako je kursor smješten na početak riječi, onda će riječ zamijeniti mjesto s riječi prije, a ako je smješten usred riječi ili potkraj, onda joj zamijenjuje mjesto s riječi iza.
  - u Vimu se to postiže s /transwrd/ pluginom.
  - naprednija verzija ovog u Emacsu je [[https://github.com/rejeep/drag-stuff.el][rejeep/drag-stuff.el]]-ov plugin koji sve pomiće pomoću =<M-strjelica>= prečca.

*** Selekcije (u Emacsu se to zovu regije i /killring/-i)
+ Selektiraj tekst: =<C-SPC><kretnje>= postavlja marker i započinje selekciju, ili u /evil modu/ to rade =v <kretnje>=, =<S-v><kretnje>= ili =<C-v><kretnje>=
+ Emacs navodno selektira i dok se drži =<S><kretnje>=, premda nisam sigura koliko je to pouzdano u /evil modu/
+ =<M-@>= je za stavljanje markera i selekciju riječi (od kursora do kraja riječi)
+ =vi<simbol>= ili =va<simbol>= su za selekcije cijelina unutar kojih se nalazi kursor (sa ili bez navodnika)
  - =w= je simbol za riječ, a =W= za bio što omeđeno razmacima
  - =b= i =(= ili =)=, =[= ili =]=, te ={= ili =}= su za tekst unutar zagrada, a ="= ili ='= za tekst unitar navodnika
  - =p= je simbol za odlomak
  -
+ =<C-x><C-p>= je za selekciju cijelog dokumenta, kao i =ggvG=
+ =<C-g>= je , ponovno, za ~cancel~ selekcije, ali i dodavanje zadnjeg označenog mjesta u ~markring~
  + čak i ako se deselektiralo, može se bilo kada stisnuti =<C-x><C-x>= i dobiti selekciju od zadnjeg mjesta gdje je postavljen marker, do mjesta gdje se sad nalazi kursor
  + inače se može kretati u krug (?) s =<C-u><C-SPC>=, =<C-o>= i =<C-i>= ili =[`= i =]`= po /markring/-u

*** Kopiranje/rezanje/ljepljenje
+ Copy/pastaenje: =<C-w>= (~kill~, tj. /cut/) i =<C-y>= (~yank~, tj. /paste/), tj. kombinacije s =d= ili =y= i =p= u evil modu

** Tablice
+ tablice rabe uobičajenu sintaksu (kao i markdown), ali momogućuju
 da se
       + s =<C-Return>= stvaraju novi retci i da se s =<Tab>= skače iz čelije u čeliju
       + =<S-Return>= je za kopiranje vrijednosti čelije u novi redak
       + =<Leader>mb-= pretvara redak u thead
       + =<M-(hjkl)>= su za izmjene/pomicanja redaka i stupaca

* Org Mode
Iako postoji broj aplikacija za uređivanje Org datoteka (prvenstveno Logseq), sve ove bilješke ću pisati za rad u Emacs-u jer je tamo Org Mode najbolje implementiran i to ću još ograničeno samo na /evil mode/ kakav je prisutan u Spacemacsu ili Doom Emacsu.

Za sve upute o /Org Modu/ može se unutar Emacsa lupiti komanda =<M-x>org-info=
Ostale upute se mogu potražiti preko prečca =<Leader>ds= (documentation search)

** Org Babel
+ osnovna sintaksa za pisanje koda je =#+START_SRC= i =#+END_SRC=, a prečac =<s<Tab>=
+ jednom kada je kod ispisan, =<Enter>= u normalnom modu ili =<C-c><C-c>= općenito izvršava blok koda
+ a može se namjestitit i automatska konverzija datoteka u /.org/,(v. [[https://martibosch.github.io/jupyter-emacs-universe/][martibosch/jupiter-emacs-universe]]) npr.:
  #+START_SRC emacs-lisp
  (setq code-cells-convert-ipynb-style '(
    ("pandoc" "--to" "ipynb" "--from" "org")
      ("pandoc" "--to" "org" "--from" "ipynb")
      org-mode))
  #+END_SRC

*** Tangle
+ /Org Bable Tangle/ je mehanizam za prikupljanje koda iz ~.org~ dokumenata i izvoz u druge datoteke
+ osnovni prečac je =<C-c><C-v>t=

* Izgled
Ovo se više tiče postavki nego ičega, ak eto:
+ dodavanje tema: =(add-to-list 'custom-theme-load-path "~/.config/emacs/themes ili štoveć")=
  + za učitavanje određene: (load-theme '<ime-teme> t)
+ prozirnost: =(add-to-list 'default-frame-alist '(alpha-background . 90)) ; za prozirnost svi prozora nadalje /dodano s Emacs v.29/=

* Terminali
Emacs ima četiri defaultna terminala:
+ ~shell~ - zvan /Inferior Shell/ kao wrapper oko sistemkog shella
+ ~eshell~ - shell pisan u emacs-lispu, pa je ujedno i REPL za elisp (nešto kao što je xonsh za python)
+ ~term~ i ~ansi-term~
+ ~vterm~ - kao najbolji emulator terminala

Postavke za terminale se unose u ~config.el~: =(setq shell-file-name  "/bin/fish")= ili =(setq eshell-aliases-file "~/.config/emacs/.eshellrc")=

* Magit
Za sada najbolji Git klijent koji sam našao (usporediv jedino s lazygit-om)
+ Osnovna komanda za paljenje je /Magit User Manual/-a =<C-x>g=, =gz= (=<M-x>magit-refresh=) i =gR= (=<M-x>magit-referesh-all=) osvježuje pogled, a =q= ga zatvara
+ =?= ili =h= (kada u Magitu) otvara popis dostupnih komandi a =hh= otvara /Help Pages/
+ za kretanje se rabe iste kratice kao i za kretanje po Org tekstu
** Fetch i Pull
+ =hzz= je za ~stash~-anje (nešto kao lokalno /commit/-anje i pitati će za novi /message/), =hzp= za ~pop~-anje (/unstash/-anje, nešto kao =hza= + =hzk= (/stash apply/ + /stash drop/))
** Log
+ =ll= ispisuje povijest commita za branch od najnovijih prema starijima
+ =lo= je za ispisivanje loga bilo koje druge grane
** Commit
+ =s= je za ~stage~-anje pojedionih /unstaged/ datoteka, sekcija koda ili čak samo pojedinih redaka, =S= za stageanje svega
  - =<Tab>= prikazuje ~diff~ po datoteci pa se može i birati što se od izmjena želi /stage/-ati
+ =u= je za ~unstage~
+ =cc= je za osnovno ~commit~-anje (otvara prozor za /commit message/ i može ga se zatvoriti s =<C-c><C-c>= ili =:wq=)
+ =ce= je za /commit/ ~--amend~
* Suradnja s Vimom
Plugini [[https://github.com/jceb/vim-orgmode/blob/master/doc/orgguide.txt][Vim Org-Mode]] ili [[https://github.com/nvim-neorg/neorg][Neorg]] omogućuju otvaranje ~.org~ datoteka u *Vim*-u i simulaciju *Emacs*-ovih mogućnosti, ali nisam siguran koliko su međusobno kompatibilni i zahtijevaju li ubacivanje nekakvih posebnih headera ili metapodataka unutar datoteke
